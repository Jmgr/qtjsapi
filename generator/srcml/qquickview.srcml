<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src"
xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0"
language="C++"
filename="/Users/andrew/opt/Qt/6.5.2/Src/qtdeclarative/src/quick/items/qquickview.h">

  <comment type="line">// Copyright (C) 2016 The Qt Company
  Ltd.</comment>
  <comment type="line">// SPDX-License-Identifier:
  LicenseRef-Qt-Commercial OR LGPL-3.0-only OR GPL-2.0-only OR
  GPL-3.0-only</comment>
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>QQUICKVIEW_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <cpp:macro>
    <name>QQUICKVIEW_H</name>
  </cpp:macro></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QtQuick/qquickwindow.h&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QtCore/qurl.h&gt;</cpp:file></cpp:include>
  <macro>
    <name>QT_BEGIN_NAMESPACE</name>
  </macro>
  <class_decl>class 
  <name>QQmlEngine</name>;</class_decl>
  <class_decl>class 
  <name>QQmlContext</name>;</class_decl>
  <class_decl>class 
  <name>QQmlError</name>;</class_decl>
  <class_decl>class 
  <name>QQuickItem</name>;</class_decl>
  <class_decl>class 
  <name>QQmlComponent</name>;</class_decl>
  <class_decl>class 
  <name>QQuickViewPrivate</name>;</class_decl>
  <class>class 
  <macro>
    <name>Q_QUICK_EXPORT</name>
  </macro>
  <name>QQuickView</name>
  <super_list>: 
  <super>
    <specifier>public</specifier>
    <name>QQuickWindow</name>
  </super></super_list>
  <block>{
  <private type="default">
    <decl_stmt>
    <decl>
    <type>
      <name>Q_OBJECT</name>
    </type>
    <name>Q_PROPERTY</name>
    <argument_list>(
    <argument>
      <expr>
        <name>ResizeMode</name>
        <name>resizeMode</name>
        <name>READ</name>
        <name>resizeMode</name>
        <name>WRITE</name>
        <name>setResizeMode</name>
      </expr>
    </argument>)</argument_list>
    <name>Q_PROPERTY</name>
    <argument_list>(
    <argument>
      <expr>
        <name>Status</name>
        <name>status</name>
        <name>READ</name>
        <name>status</name>
        <name>NOTIFY</name>
        <name>statusChanged</name>
      </expr>
    </argument>)</argument_list>
    <name>Q_PROPERTY</name>
    <argument_list>(
    <argument>
      <expr>
        <name>QUrl</name>
        <name>source</name>
        <name>READ</name>
        <name>source</name>
        <name>WRITE</name>
        <name>setSource</name>
        <name>DESIGNABLE</name>
        <literal type="boolean">true</literal>
      </expr>
    </argument>)</argument_list>public
    <range>: 
    <expr>
      <specifier>explicit</specifier>
      <call>
        <name>QQuickView</name>
        <argument_list>(
        <argument>
          <expr>
            <name>QWindow</name>
            <operator>*</operator>
            <name>parent</name>
            <operator>=</operator>
            <literal type="null">nullptr</literal>
          </expr>
        </argument>)</argument_list>
      </call>
    </expr></range></decl>;</decl_stmt>
    <constructor_decl>
    <name>QQuickView</name>
    <parameter_list>(
    <parameter>
      <decl>
        <type>
          <name>QQmlEngine</name>
          <modifier>*</modifier>
        </type>
        <name>engine</name>
      </decl>
    </parameter>, 
    <parameter>
      <decl>
        <type>
          <name>QWindow</name>
          <modifier>*</modifier>
        </type>
        <name>parent</name>
      </decl>
    </parameter>)</parameter_list>;</constructor_decl>
    <constructor_decl>
    <specifier>explicit</specifier>
    <name>QQuickView</name>
    <parameter_list>(
    <parameter>
      <decl>
        <type>
          <specifier>const</specifier>
          <name>QUrl</name>
          <modifier>&amp;</modifier>
        </type>
        <name>source</name>
      </decl>
    </parameter>, 
    <parameter>
      <decl>
        <type>
          <name>QWindow</name>
          <modifier>*</modifier>
        </type>
        <name>parent</name>
        <init>= 
        <expr>
          <literal type="null">nullptr</literal>
        </expr></init>
      </decl>
    </parameter>)</parameter_list>;</constructor_decl>
    <constructor_decl>
    <name>QQuickView</name>
    <parameter_list>(
    <parameter>
      <decl>
        <type>
          <specifier>const</specifier>
          <name>QUrl</name>
          <modifier>&amp;</modifier>
        </type>
        <name>source</name>
      </decl>
    </parameter>, 
    <parameter>
      <decl>
        <type>
          <name>QQuickRenderControl</name>
          <modifier>*</modifier>
        </type>
        <name>renderControl</name>
      </decl>
    </parameter>)</parameter_list>;</constructor_decl>
    <destructor_decl>
    <name>~QQuickView</name>
    <parameter_list>()</parameter_list>
    <specifier>override</specifier>;</destructor_decl>
    <function_decl>
    <type>
      <name>QUrl</name>
    </type>
    <name>source</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <function_decl>
    <type>
      <name>QQmlEngine</name>
      <modifier>*</modifier>
    </type>
    <name>engine</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <function_decl>
    <type>
      <name>QQmlContext</name>
      <modifier>*</modifier>
    </type>
    <name>rootContext</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <function_decl>
    <type>
      <name>QQuickItem</name>
      <modifier>*</modifier>
    </type>
    <name>rootObject</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <enum>enum 
    <name>ResizeMode</name>
    <block>{ 
    <decl>
      <name>SizeViewToRootObject</name>
    </decl>, 
    <decl>
      <name>SizeRootObjectToView</name>
    </decl>}</block>;</enum>
    <macro>
      <name>Q_ENUM</name>
      <argument_list>(
      <argument>ResizeMode</argument>)</argument_list>
    </macro>
    <function_decl>
    <type>
      <name>ResizeMode</name>
    </type>
    <name>resizeMode</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <function_decl>
    <type>
      <name>void</name>
    </type>
    <name>setResizeMode</name>
    <parameter_list>(
    <parameter>
      <decl>
        <type>
          <name>ResizeMode</name>
        </type>
      </decl>
    </parameter>)</parameter_list>;</function_decl>
    <enum>enum 
    <name>Status</name>
    <block>{ 
    <decl>
      <name>Null</name>
    </decl>, 
    <decl>
      <name>Ready</name>
    </decl>, 
    <decl>
      <name>Loading</name>
    </decl>, 
    <decl>
      <name>Error</name>
    </decl>}</block>;</enum>
    <macro>
      <name>Q_ENUM</name>
      <argument_list>(
      <argument>Status</argument>)</argument_list>
    </macro>
    <function_decl>
    <type>
      <name>Status</name>
    </type>
    <name>status</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <function_decl>
    <type>
      <name>
        <name>QList</name>
        <argument_list type="generic">&lt;
        <argument>
          <expr>
            <name>QQmlError</name>
          </expr>
        </argument>&gt;</argument_list>
      </name>
    </type>
    <name>errors</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <function_decl>
    <type>
      <name>QSize</name>
    </type>
    <name>sizeHint</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
    <function_decl>
    <type>
      <name>QSize</name>
    </type>
    <name>initialSize</name>
    <parameter_list>()</parameter_list>
    <specifier>const</specifier>;</function_decl>
  </private>
  <public>public 
  <name>Q_SLOTS</name>: 
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>setSource</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <specifier>const</specifier>
        <name>QUrl</name>
        <modifier>&amp;</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>setInitialProperties</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <specifier>const</specifier>
        <name>QVariantMap</name>
        <modifier>&amp;</modifier>
      </type>
      <name>initialProperties</name>
    </decl>
  </parameter>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>setContent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <specifier>const</specifier>
        <name>QUrl</name>
        <modifier>&amp;</modifier>
      </type>
      <name>url</name>
    </decl>
  </parameter>, 
  <parameter>
    <decl>
      <type>
        <name>QQmlComponent</name>
        <modifier>*</modifier>
      </type>
      <name>component</name>
    </decl>
  </parameter>, 
  <parameter>
    <decl>
      <type>
        <name>QObject</name>
        <modifier>*</modifier>
      </type>
      <name>item</name>
    </decl>
  </parameter>)</parameter_list>;</function_decl>
  <label>
  <name>Q_SIGNALS</name>:</label>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>statusChanged</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>
          <name>QQuickView</name>
          <operator>::</operator>
          <name>Status</name>
        </name>
      </type>
    </decl>
  </parameter>)</parameter_list>;</function_decl></public>
  <private>private 
  <name>Q_SLOTS</name>: 
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>continueExecute</name>
  <parameter_list>()</parameter_list>;</function_decl></private>
  <protected>protected: 
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>resizeEvent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>QResizeEvent</name>
        <modifier>*</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>
  <specifier>override</specifier>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>timerEvent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>QTimerEvent</name>
        <modifier>*</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>
  <specifier>override</specifier>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>keyPressEvent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>QKeyEvent</name>
        <modifier>*</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>
  <specifier>override</specifier>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>keyReleaseEvent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>QKeyEvent</name>
        <modifier>*</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>
  <specifier>override</specifier>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>mousePressEvent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>QMouseEvent</name>
        <modifier>*</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>
  <specifier>override</specifier>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>mouseReleaseEvent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>QMouseEvent</name>
        <modifier>*</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>
  <specifier>override</specifier>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>mouseMoveEvent</name>
  <parameter_list>(
  <parameter>
    <decl>
      <type>
        <name>QMouseEvent</name>
        <modifier>*</modifier>
      </type>
    </decl>
  </parameter>)</parameter_list>
  <specifier>override</specifier>;</function_decl></protected>
  <private>private: 
  <macro>
    <name>Q_DISABLE_COPY</name>
    <argument_list>(
    <argument>QQuickView</argument>)</argument_list>
  </macro>
  <macro>
    <name>Q_DECLARE_PRIVATE</name>
    <argument_list>(
    <argument>QQuickView</argument>)</argument_list>
  </macro></private>}</block>;</class>
  <expr>
    <name>QT_END_NAMESPACE</name>
  </expr>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
  <comment type="line">// QQUICKVIEW_H</comment>
</unit>
