<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="qplaintextedit.h">
  <class_decl name="QTextDocument" />
  <class_decl name="QMenu" />
  <class_decl name="QMimeData" />
  <class_decl name="QRegularExpression" />
  <class name="QPlainTextEdit">
    <super_list>
      <super name="QObject" />
      <super name="QWidget" />
      <super name="QFrame" />
      <super name="QAbstractScrollArea" />
    </super_list>
    <property type="bool" name="tabChangesFocus" read="tabChangesFocus" write="setTabChangesFocus" />
    <property type="QString" name="documentTitle" read="documentTitle" write="setDocumentTitle" />
    <property type="bool" name="undoRedoEnabled" read="isUndoRedoEnabled" write="setUndoRedoEnabled" />
    <property type="QPlainTextEdit::LineWrapMode" name="lineWrapMode" read="lineWrapMode" write="setLineWrapMode" />
    <property type="bool" name="readOnly" read="isReadOnly" write="setReadOnly" />
    <property type="QString" name="plainText" read="toPlainText" write="setPlainText" />
    <property type="bool" name="overwriteMode" read="overwriteMode" write="setOverwriteMode" />
    <property type="qreal" name="tabStopDistance" read="tabStopDistance" write="setTabStopDistance" />
    <property type="int" name="cursorWidth" read="cursorWidth" write="setCursorWidth" />
    <property type="Qt::TextInteractionFlags" name="textInteractionFlags" read="textInteractionFlags"
    write="setTextInteractionFlags" />
    <property type="int" name="blockCount" read="blockCount" />
    <property type="int" name="maximumBlockCount" read="maximumBlockCount" write="setMaximumBlockCount" />
    <property type="bool" name="backgroundVisible" read="backgroundVisible" write="setBackgroundVisible" />
    <property type="bool" name="centerOnScroll" read="centerOnScroll" write="setCenterOnScroll" />
    <property type="QString" name="placeholderText" read="placeholderText" write="setPlaceholderText" />
    <enum name="LineWrapMode">
      <key>NoWrap</key>
      <key>WidgetWidth</key>
    </enum>
    <constructor>
      <variant>
        <parameters>
          <parameter const="false" type="QWidget" modifier="*" name="parent" default="nullptr" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="text" />
          <parameter const="false" type="QWidget" modifier="*" name="parent" default="nullptr" />
        </parameters>
      </variant>
    </constructor>
    <function name="setDocument">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="QTextDocument" modifier="*" name="document" />
        </parameters>
      </variant>
    </function>
    <function name="document">
      <variant return-type="QTextDocument*" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setPlaceholderText">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="placeholderText" />
        </parameters>
      </variant>
    </function>
    <function name="placeholderText">
      <variant return-type="QString" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setTextCursor">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QTextCursor" modifier="&amp;" name="cursor" />
        </parameters>
      </variant>
    </function>
    <function name="textCursor">
      <variant return-type="QTextCursor" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isReadOnly">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setReadOnly">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="ro" />
        </parameters>
      </variant>
    </function>
    <function name="setTextInteractionFlags">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="Qt::TextInteractionFlags" modifier="" name="flags" />
        </parameters>
      </variant>
    </function>
    <function name="textInteractionFlags">
      <variant return-type="Qt::TextInteractionFlags" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="mergeCurrentCharFormat">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QTextCharFormat" modifier="&amp;" name="modifier" />
        </parameters>
      </variant>
    </function>
    <function name="setCurrentCharFormat">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QTextCharFormat" modifier="&amp;" name="format" />
        </parameters>
      </variant>
    </function>
    <function name="currentCharFormat">
      <variant return-type="QTextCharFormat" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="tabChangesFocus">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setTabChangesFocus">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="setDocumentTitle">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="title" />
        </parameters>
      </variant>
    </function>
    <function name="documentTitle">
      <variant return-type="QString" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isUndoRedoEnabled">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setUndoRedoEnabled">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="enable" />
        </parameters>
      </variant>
    </function>
    <function name="setMaximumBlockCount">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="maximum" />
        </parameters>
      </variant>
    </function>
    <function name="maximumBlockCount">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="lineWrapMode">
      <variant return-type="QPlainTextEdit::LineWrapMode" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setLineWrapMode">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="QPlainTextEdit::LineWrapMode" modifier="" name="mode" />
        </parameters>
      </variant>
    </function>
    <function name="wordWrapMode">
      <variant return-type="QTextOption::WrapMode" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setWordWrapMode">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="QTextOption::WrapMode" modifier="" name="policy" />
        </parameters>
      </variant>
    </function>
    <function name="setBackgroundVisible">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="visible" />
        </parameters>
      </variant>
    </function>
    <function name="backgroundVisible">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setCenterOnScroll">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="enabled" />
        </parameters>
      </variant>
    </function>
    <function name="centerOnScroll">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="find">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="exp" />
          <parameter const="false" type="QTextDocument::FindFlags" modifier="" name="options"
          default="QTextDocument::FindFlags()" />
        </parameters>
      </variant>
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="QRegularExpression" modifier="&amp;" name="exp" />
          <parameter const="false" type="QTextDocument::FindFlags" modifier="" name="options"
          default="QTextDocument::FindFlags()" />
        </parameters>
      </variant>
    </function>
    <preproc plain="#if QT_CONFIG(regularexpression)" />
    <preproc plain="#endif" />
    <function name="toPlainText">
      <variant return-type="QString" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="ensureCursorVisible">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="loadResource">
      <variant return-type="QVariant" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="type" />
          <parameter const="true" type="QUrl" modifier="&amp;" name="name" />
        </parameters>
      </variant>
    </function>
    <preproc plain="#ifndef QT_NO_CONTEXTMENU" />
    <function name="createStandardContextMenu">
      <variant return-type="QMenu*" access="public">
        <parameters />
      </variant>
      <variant return-type="QMenu*" access="public">
        <parameters>
          <parameter const="true" type="QPoint" modifier="&amp;" name="position" />
        </parameters>
      </variant>
    </function>
    <preproc plain="#endif" />
    <function name="cursorForPosition">
      <variant return-type="QTextCursor" const="true" access="public">
        <parameters>
          <parameter const="true" type="QPoint" modifier="&amp;" name="pos" />
        </parameters>
      </variant>
    </function>
    <function name="cursorRect">
      <variant return-type="QRect" const="true" access="public">
        <parameters>
          <parameter const="true" type="QTextCursor" modifier="&amp;" name="cursor" />
        </parameters>
      </variant>
      <variant return-type="QRect" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="anchorAt">
      <variant return-type="QString" const="true" access="public">
        <parameters>
          <parameter const="true" type="QPoint" modifier="&amp;" name="pos" />
        </parameters>
      </variant>
    </function>
    <function name="overwriteMode">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setOverwriteMode">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="overwrite" />
        </parameters>
      </variant>
    </function>
    <function name="tabStopDistance">
      <variant return-type="qreal" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setTabStopDistance">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="qreal" modifier="" name="distance" />
        </parameters>
      </variant>
    </function>
    <function name="cursorWidth">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setCursorWidth">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="width" />
        </parameters>
      </variant>
    </function>
    <!--
    <function name="setExtraSelections">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;QTextEdit::ExtraSelection&gt;" modifier="&amp;" name="selections" />
        </parameters>
      </variant>
    </function>
    -->
    <!--
    <function name="extraSelections">
      <variant return-type="QList&lt;QTextEdit::ExtraSelection&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    -->
    <function name="moveCursor">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="QTextCursor::MoveOperation" modifier="" name="operation" />
          <parameter const="false" type="QTextCursor::MoveMode" modifier="" name="mode"
          default="QTextCursor::MoveAnchor" />
        </parameters>
      </variant>
    </function>
    <function name="canPaste">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="blockCount">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="inputMethodQuery">
      <variant return-type="QVariant" const="true" access="public">
        <parameters>
          <parameter const="false" type="Qt::InputMethodQuery" modifier="" name="property" />
        </parameters>
      </variant>
      <variant return-type="QVariant" const="true" access="public">
        <parameters>
          <parameter const="false" type="Qt::InputMethodQuery" modifier="" name="query" />
          <parameter const="false" type="QVariant" modifier="" name="argument" />
        </parameters>
      </variant>
    </function>
    <function name="setPlainText">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="text" />
        </parameters>
      </variant>
    </function>
    <preproc plain="#ifndef QT_NO_CLIPBOARD" />
    <function name="cut">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="copy">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="paste">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <preproc plain="#endif" />
    <function name="undo">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="redo">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clear">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="selectAll">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="insertPlainText">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="text" />
        </parameters>
      </variant>
    </function>
    <function name="appendPlainText">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="text" />
        </parameters>
      </variant>
    </function>
    <function name="appendHtml">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="html" />
        </parameters>
      </variant>
    </function>
    <function name="centerCursor">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="zoomIn">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="range" default="1" />
        </parameters>
      </variant>
    </function>
    <function name="zoomOut">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="range" default="1" />
        </parameters>
      </variant>
    </function>
    <function name="textChanged">
      <variant return-type="void" access="public" signal="true">
        <parameters />
      </variant>
    </function>
    <function name="undoAvailable">
      <variant return-type="void" access="public" signal="true">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="redoAvailable">
      <variant return-type="void" access="public" signal="true">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="copyAvailable">
      <variant return-type="void" access="public" signal="true">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="selectionChanged">
      <variant return-type="void" access="public" signal="true">
        <parameters />
      </variant>
    </function>
    <function name="cursorPositionChanged">
      <variant return-type="void" access="public" signal="true">
        <parameters />
      </variant>
    </function>
    <function name="updateRequest">
      <variant return-type="void" access="public" signal="true">
        <parameters>
          <parameter const="true" type="QRect" modifier="&amp;" name="rect" />
          <parameter const="false" type="int" modifier="" name="dy" />
        </parameters>
      </variant>
    </function>
    <function name="blockCountChanged">
      <variant return-type="void" access="public" signal="true">
        <parameters>
          <parameter const="false" type="int" modifier="" name="newBlockCount" />
        </parameters>
      </variant>
    </function>
    <function name="modificationChanged">
      <variant return-type="void" access="public" signal="true">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="" />
        </parameters>
      </variant>
    </function>
    <function name="event" />
    <function name="timerEvent" />
    <function name="keyPressEvent" />
    <function name="keyReleaseEvent" />
    <function name="resizeEvent">
      <variant return-type="void" virtual="true" access="protected">
        <parameters>
          <parameter const="false" type="QResizeEvent" modifier="*" name="e" />
        </parameters>
      </variant>
    </function>
    <function name="paintEvent">
      <variant return-type="void" virtual="true" access="protected">
        <parameters>
          <parameter const="false" type="QPaintEvent" modifier="*" name="e" />
        </parameters>
      </variant>
    </function>
    <function name="mousePressEvent" />
    <function name="mouseMoveEvent">
      <variant return-type="void" virtual="true" access="protected">
        <parameters>
          <parameter const="false" type="QMouseEvent" modifier="*" name="e" />
        </parameters>
      </variant>
    </function>
    <function name="mouseReleaseEvent" />
    <function name="mouseDoubleClickEvent" />
    <function name="focusNextPrevChild" />
    <preproc plain="#ifndef QT_NO_CONTEXTMENU" />
    <function name="contextMenuEvent" />
    <preproc plain="#endif" />
    <preproc plain="#if QT_CONFIG(draganddrop)" />
    <function name="dragEnterEvent" />
    <function name="dragLeaveEvent" />
    <function name="dragMoveEvent" />
    <function name="dropEvent" />
    <preproc plain="#endif" />
    <function name="focusInEvent" />
    <function name="focusOutEvent" />
    <function name="showEvent" />
    <function name="changeEvent" />
    <preproc plain="#if QT_CONFIG(wheelevent)" />
    <function name="wheelEvent" />
    <preproc plain="#endif" />
    <function name="createMimeDataFromSelection" />
    <function name="canInsertFromMimeData" />
    <function name="insertFromMimeData" />
    <function name="inputMethodEvent" />
    <function name="scrollContentsBy" />
    <function name="doSetTextCursor" />
    <function name="firstVisibleBlock" />
    <function name="contentOffset" />
    <function name="blockBoundingRect" />
    <function name="blockBoundingGeometry" />
    <function name="getPaintContext" />
    <function name="zoomInF" />
    <class_decl name="QPlainTextEditControl" />
  </class>
  <!--
  <class name="QPlainTextDocumentLayout">
    <super_list>
      <super name="QAbstractTextDocumentLayout" />
    </super_list>
    <property type="int" name="cursorWidth" read="cursorWidth" write="setCursorWidth" />
    <constructor>
      <variant>
        <parameters>
          <parameter const="false" type="QTextDocument" modifier="*" name="document" />
        </parameters>
      </variant>
    </constructor>
    <function name="draw">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="QPainter" modifier="*" name="" />
          <parameter const="true" type="PaintContext" modifier="&amp;" name="" />
        </parameters>
      </variant>
    </function>
    <function name="hitTest">
      <variant return-type="int" const="true" access="public">
        <parameters>
          <parameter const="true" type="QPointF" modifier="&amp;" name="" />
          <parameter const="false" type="Qt::HitTestAccuracy" modifier="" name="" />
        </parameters>
      </variant>
    </function>
    <function name="pageCount">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="documentSize">
      <variant return-type="QSizeF" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="frameBoundingRect">
      <variant return-type="QRectF" const="true" access="public">
        <parameters>
          <parameter const="false" type="QTextFrame" modifier="*" name="" />
        </parameters>
      </variant>
    </function>
    <function name="blockBoundingRect">
      <variant return-type="QRectF" const="true" access="public">
        <parameters>
          <parameter const="true" type="QTextBlock" modifier="&amp;" name="block" />
        </parameters>
      </variant>
    </function>
    <function name="ensureBlockLayout">
      <variant return-type="void" const="true" access="public">
        <parameters>
          <parameter const="true" type="QTextBlock" modifier="&amp;" name="block" />
        </parameters>
      </variant>
    </function>
    <function name="setCursorWidth">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="width" />
        </parameters>
      </variant>
    </function>
    <function name="cursorWidth">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="requestUpdate">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="documentChanged" />
    <function name="setTextWidth" />
    <function name="textWidth" />
    <function name="layoutBlock" />
    <function name="blockWidth" />
    <function name="priv" />
    <class_decl name="QPlainTextEdit" />
  </class>
  -->
</unit>
